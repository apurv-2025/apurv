services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: fhir_postgres
    environment:
      POSTGRES_DB: fhir_db
      POSTGRES_USER: fhir_user
      POSTGRES_PASSWORD: fhir_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U fhir_user -d fhir_db"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fhir_network

  # Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: fhir_backend
    environment:
      DATABASE_URL: postgresql://fhir_user:fhir_password@postgres:5432/fhir_db
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - fhir_network

  # Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: fhir_frontend
    ports:
      - "3000:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - fhir_network

volumes:
  postgres_data:

networks:
  fhir_network:
    driver: bridge
