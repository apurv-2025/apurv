# docker-compose.prod.yml (Production optimized)
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager_postgres_prod
    environment:
      POSTGRES_DB: taskmanager
      POSTGRES_USER: taskuser
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - taskmanager_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U taskuser -d taskmanager"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'

  redis:
    image: redis:7-alpine
    container_name: taskmanager_redis_prod
    command: redis-server --maxmemory 256mb --maxmemory-policy allkeys-lru
    networks:
      - taskmanager_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: taskmanager_backend_prod
    environment:
      - ENVIRONMENT=production
      - DATABASE_URL=postgresql://taskuser:${POSTGRES_PASSWORD}@postgres:5432/taskmanager
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=False
    volumes:
      - ./uploads:/app/uploads
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - taskmanager_network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    deploy:
      resources:
        limits:
          memory: 1G
          cpus: '1.0'
      replicas: 2

  nginx:
    image: nginx:alpine
    container_name: taskmanager_nginx_prod
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.prod.conf:/etc/nginx/nginx.conf
      - ./nginx/ssl:/etc/nginx/ssl
      - ./uploads:/var/www/uploads:ro
    depends_on:
      - backend
    networks:
      - taskmanager_network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256M
          cpus: '0.25'

volumes:
  postgres_data:

networks:
  taskmanager_network:
    driver: bridge
