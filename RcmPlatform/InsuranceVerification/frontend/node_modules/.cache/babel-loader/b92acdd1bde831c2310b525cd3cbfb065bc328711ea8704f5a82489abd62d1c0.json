{"ast":null,"code":"// File: src/services/apiService.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\nclass ApiService {\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers\n      },\n      ...options\n    };\n    try {\n      const response = await fetch(url, config);\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch(`${API_BASE_URL}/api/v1/upload/insurance-card`, {\n      method: 'POST',\n      body: formData\n    });\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.status}`);\n    }\n    return await response.json();\n  }\n  async submitEligibilityInquiry(data) {\n    return this.request('/api/v1/eligibility/inquiry', {\n      method: 'POST',\n      body: JSON.stringify(data)\n    });\n  }\n  async getEligibilityResponse(requestId) {\n    return this.request(`/api/v1/eligibility/response/${requestId}`);\n  }\n  async getInsuranceCards() {\n    return this.request('/api/v1/insurance-cards');\n  }\n  async healthCheck() {\n    return this.request('/');\n  }\n}\nexport const apiService = new ApiService();","map":{"version":3,"names":["API_BASE_URL","process","env","REACT_APP_API_URL","ApiService","request","endpoint","options","url","config","headers","response","fetch","ok","Error","status","json","error","console","uploadFile","file","formData","FormData","append","method","body","submitEligibilityInquiry","data","JSON","stringify","getEligibilityResponse","requestId","getInsuranceCards","healthCheck","apiService"],"sources":["/Users/paramhegde/oldapurv/github/RcmPlatform/InsuranceVerification/frontend/src/services/apiService.js"],"sourcesContent":["// File: src/services/apiService.js\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:8000';\n\nclass ApiService {\n  async request(endpoint, options = {}) {\n    const url = `${API_BASE_URL}${endpoint}`;\n    const config = {\n      headers: {\n        'Content-Type': 'application/json',\n        ...options.headers,\n      },\n      ...options,\n    };\n\n    try {\n      const response = await fetch(url, config);\n      \n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      \n      return await response.json();\n    } catch (error) {\n      console.error('API request failed:', error);\n      throw error;\n    }\n  }\n\n  async uploadFile(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch(`${API_BASE_URL}/api/v1/upload/insurance-card`, {\n      method: 'POST',\n      body: formData,\n    });\n\n    if (!response.ok) {\n      throw new Error(`Upload failed: ${response.status}`);\n    }\n\n    return await response.json();\n  }\n\n  async submitEligibilityInquiry(data) {\n    return this.request('/api/v1/eligibility/inquiry', {\n      method: 'POST',\n      body: JSON.stringify(data),\n    });\n  }\n\n  async getEligibilityResponse(requestId) {\n    return this.request(`/api/v1/eligibility/response/${requestId}`);\n  }\n\n  async getInsuranceCards() {\n    return this.request('/api/v1/insurance-cards');\n  }\n\n  async healthCheck() {\n    return this.request('/');\n  }\n}\n\nexport const apiService = new ApiService();\n"],"mappings":"AAAA;AACA,MAAMA,YAAY,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB;AAE7E,MAAMC,UAAU,CAAC;EACf,MAAMC,OAAOA,CAACC,QAAQ,EAAEC,OAAO,GAAG,CAAC,CAAC,EAAE;IACpC,MAAMC,GAAG,GAAG,GAAGR,YAAY,GAAGM,QAAQ,EAAE;IACxC,MAAMG,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClC,GAAGH,OAAO,CAACG;MACb,CAAC;MACD,GAAGH;IACL,CAAC;IAED,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACJ,GAAG,EAAEC,MAAM,CAAC;MAEzC,IAAI,CAACE,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBH,QAAQ,CAACI,MAAM,EAAE,CAAC;MAC3D;MAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;MAC3C,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,UAAUA,CAACC,IAAI,EAAE;IACrB,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMT,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGZ,YAAY,+BAA+B,EAAE;MAC3EwB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEJ;IACR,CAAC,CAAC;IAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;MAChB,MAAM,IAAIC,KAAK,CAAC,kBAAkBH,QAAQ,CAACI,MAAM,EAAE,CAAC;IACtD;IAEA,OAAO,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;EAC9B;EAEA,MAAMU,wBAAwBA,CAACC,IAAI,EAAE;IACnC,OAAO,IAAI,CAACtB,OAAO,CAAC,6BAA6B,EAAE;MACjDmB,MAAM,EAAE,MAAM;MACdC,IAAI,EAAEG,IAAI,CAACC,SAAS,CAACF,IAAI;IAC3B,CAAC,CAAC;EACJ;EAEA,MAAMG,sBAAsBA,CAACC,SAAS,EAAE;IACtC,OAAO,IAAI,CAAC1B,OAAO,CAAC,gCAAgC0B,SAAS,EAAE,CAAC;EAClE;EAEA,MAAMC,iBAAiBA,CAAA,EAAG;IACxB,OAAO,IAAI,CAAC3B,OAAO,CAAC,yBAAyB,CAAC;EAChD;EAEA,MAAM4B,WAAWA,CAAA,EAAG;IAClB,OAAO,IAAI,CAAC5B,OAAO,CAAC,GAAG,CAAC;EAC1B;AACF;AAEA,OAAO,MAAM6B,UAAU,GAAG,IAAI9B,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}