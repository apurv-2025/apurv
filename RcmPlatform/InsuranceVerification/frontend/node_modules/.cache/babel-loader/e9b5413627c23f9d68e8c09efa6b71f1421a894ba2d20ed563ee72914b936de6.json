{"ast":null,"code":"var _s = $RefreshSig$();\n// File: src/hooks/useFileUpload.js\nimport { useState, useCallback } from 'react';\nimport { fileService } from '../services/fileService';\nimport { apiService } from '../services/apiService';\nimport { useToast } from '../contexts/ToastContext';\nimport { useApp } from '../contexts/AppContext';\nexport const useFileUpload = () => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const {\n    showSuccess,\n    showError\n  } = useToast();\n  const {\n    dispatch\n  } = useApp();\n  const uploadFile = useCallback(async file => {\n    try {\n      setUploading(true);\n\n      // Validate file\n      fileService.validateFile(file);\n\n      // Upload file\n      const result = await apiService.uploadFile(file);\n\n      // Update app state\n      dispatch({\n        type: 'SET_EXTRACTED_DATA',\n        payload: result.extracted_data\n      });\n      dispatch({\n        type: 'ADD_UPLOADED_FILE',\n        payload: {\n          file,\n          result\n        }\n      });\n      showSuccess('File uploaded and processed successfully!');\n      return result;\n    } catch (error) {\n      showError(error.message || 'Failed to upload file');\n      throw error;\n    } finally {\n      setUploading(false);\n    }\n  }, [dispatch, showSuccess, showError]);\n  return {\n    uploadFile,\n    uploading\n  };\n};\n_s(useFileUpload, \"IapV3e4Fg3ZyLv2Qr6sTFJLmEog=\", false, function () {\n  return [useToast, useApp];\n});","map":{"version":3,"names":["useState","useCallback","fileService","apiService","useToast","useApp","useFileUpload","_s","uploading","setUploading","showSuccess","showError","dispatch","uploadFile","file","validateFile","result","type","payload","extracted_data","error","message"],"sources":["/Users/paramhegde/apurv/agenticpractice/InsuranceVerification/frontend/src/hooks/useFileUpload.js"],"sourcesContent":["// File: src/hooks/useFileUpload.js\nimport { useState, useCallback } from 'react';\nimport { fileService } from '../services/fileService';\nimport { apiService } from '../services/apiService';\nimport { useToast } from '../contexts/ToastContext';\nimport { useApp } from '../contexts/AppContext';\n\nexport const useFileUpload = () => {\n  const [uploading, setUploading] = useState(false);\n  const { showSuccess, showError } = useToast();\n  const { dispatch } = useApp();\n\n  const uploadFile = useCallback(async (file) => {\n    try {\n      setUploading(true);\n      \n      // Validate file\n      fileService.validateFile(file);\n      \n      // Upload file\n      const result = await apiService.uploadFile(file);\n      \n      // Update app state\n      dispatch({ type: 'SET_EXTRACTED_DATA', payload: result.extracted_data });\n      dispatch({ type: 'ADD_UPLOADED_FILE', payload: { file, result } });\n      \n      showSuccess('File uploaded and processed successfully!');\n      \n      return result;\n    } catch (error) {\n      showError(error.message || 'Failed to upload file');\n      throw error;\n    } finally {\n      setUploading(false);\n    }\n  }, [dispatch, showSuccess, showError]);\n\n  return {\n    uploadFile,\n    uploading\n  };\n};\n"],"mappings":";AAAA;AACA,SAASA,QAAQ,EAAEC,WAAW,QAAQ,OAAO;AAC7C,SAASC,WAAW,QAAQ,yBAAyB;AACrD,SAASC,UAAU,QAAQ,wBAAwB;AACnD,SAASC,QAAQ,QAAQ,0BAA0B;AACnD,SAASC,MAAM,QAAQ,wBAAwB;AAE/C,OAAO,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACjC,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM;IAAEU,WAAW;IAAEC;EAAU,CAAC,GAAGP,QAAQ,CAAC,CAAC;EAC7C,MAAM;IAAEQ;EAAS,CAAC,GAAGP,MAAM,CAAC,CAAC;EAE7B,MAAMQ,UAAU,GAAGZ,WAAW,CAAC,MAAOa,IAAI,IAAK;IAC7C,IAAI;MACFL,YAAY,CAAC,IAAI,CAAC;;MAElB;MACAP,WAAW,CAACa,YAAY,CAACD,IAAI,CAAC;;MAE9B;MACA,MAAME,MAAM,GAAG,MAAMb,UAAU,CAACU,UAAU,CAACC,IAAI,CAAC;;MAEhD;MACAF,QAAQ,CAAC;QAAEK,IAAI,EAAE,oBAAoB;QAAEC,OAAO,EAAEF,MAAM,CAACG;MAAe,CAAC,CAAC;MACxEP,QAAQ,CAAC;QAAEK,IAAI,EAAE,mBAAmB;QAAEC,OAAO,EAAE;UAAEJ,IAAI;UAAEE;QAAO;MAAE,CAAC,CAAC;MAElEN,WAAW,CAAC,2CAA2C,CAAC;MAExD,OAAOM,MAAM;IACf,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdT,SAAS,CAACS,KAAK,CAACC,OAAO,IAAI,uBAAuB,CAAC;MACnD,MAAMD,KAAK;IACb,CAAC,SAAS;MACRX,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC,EAAE,CAACG,QAAQ,EAAEF,WAAW,EAAEC,SAAS,CAAC,CAAC;EAEtC,OAAO;IACLE,UAAU;IACVL;EACF,CAAC;AACH,CAAC;AAACD,EAAA,CAlCWD,aAAa;EAAA,QAEWF,QAAQ,EACtBC,MAAM;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}