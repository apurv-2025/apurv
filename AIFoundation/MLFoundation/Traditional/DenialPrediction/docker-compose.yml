version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:13
    container_name: healthcare_denials_db
    environment:
      POSTGRES_DB: healthcare_denials
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d healthcare_denials"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis Cache
  redis:
    image: redis:6-alpine
    container_name: healthcare_denials_redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # MLflow Tracking Server
  mlflow:
    image: python:3.9-slim
    container_name: healthcare_denials_mlflow
    working_dir: /app
    environment:
      - MLFLOW_TRACKING_URI=http://localhost:5000
    ports:
      - "5000:5000"
    volumes:
      - ./mlflow:/app/mlflow
    command: >
      bash -c "pip install mlflow &&
               mlflow server --host 0.0.0.0 --port 5000 --backend-store-uri sqlite:///mlflow.db"
    depends_on:
      - postgres

  # Prometheus Metrics
  prometheus:
    image: prom/prometheus:latest
    container_name: healthcare_denials_prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'

  # Grafana Dashboard
  grafana:
    image: grafana/grafana:latest
    container_name: healthcare_denials_grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    depends_on:
      - prometheus

  # API Server (for development)
  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: healthcare_denials_api
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://user:password@postgres:5432/healthcare_denials
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - MLFLOW_TRACKING_URI=http://mlflow:5000
    volumes:
      - .:/app
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload

  # Dashboard (for development)
  dashboard:
    build:
      context: .
      dockerfile: dashboard/Dockerfile
    container_name: healthcare_denials_dashboard
    ports:
      - "8501:8501"
    environment:
      - API_BASE_URL=http://api:8000
      - API_TOKEN=demo_token_123
    volumes:
      - ./dashboard:/app/dashboard
    depends_on:
      - api

volumes:
  postgres_data:
  redis_data:
  prometheus_data:
  grafana_data: 