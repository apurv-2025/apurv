# docker-compose.prod.yml
version: '3.8'

services:
  postgres:
    image: postgres:15-alpine
    container_name: taskmanager_postgres_prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    networks:
      - taskmanager_prod
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: taskmanager_redis_prod
    volumes:
      - redis_data_prod:/data
    networks:
      - taskmanager_prod
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  api:
    build: 
      context: ./backend
      dockerfile: Dockerfile
    container_name: taskmanager_api_prod
    environment:
      DATABASE_URL: postgresql://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      SMTP_SERVER: ${SMTP_SERVER}
      SMTP_PORT: ${SMTP_PORT}
      SMTP_USER: ${SMTP_USER}
      SMTP_PASS: ${SMTP_PASS}
      TWILIO_ACCOUNT_SID: ${TWILIO_ACCOUNT_SID}
      TWILIO_AUTH_TOKEN: ${TWILIO_AUTH_TOKEN}
      TWILIO_PHONE_NUMBER: ${TWILIO_PHONE_NUMBER}
      SECRET_KEY: ${SECRET_KEY}
    depends_on:
      - postgres
      - redis
    networks:
      - taskmanager_prod
    restart: unless-stopped
    command: >
      sh -c "
        alembic upgrade head &&
        uvicorn main:app --host 0.0.0.0 --port 8000 --workers 4
      "

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: taskmanager_frontend_prod
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - api
    networks:
      - taskmanager_prod
    restart: unless-stopped
    volumes:
      - ./ssl:/etc/nginx/ssl:ro

volumes:
  postgres_data_prod:
  redis_data_prod:

networks:
  taskmanager_prod:
    driver: bridge
